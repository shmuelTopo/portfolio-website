[{"content":"\nI built recipe website using **TypeScript**, **Express**, and **Postgres**. It offers smooth recipe browsing experience. i.e. I know the way I used Postgres was overkill, but I had so much fun building it so I went with it...\n\n### Here are the website's key features:\n\n1. Recipe search: Users can search for recipes by keyword. The server connects to an external recipe API to retrieve relevant recipes.\n2. Caching: Fetched recipes are temporarily stored in PostgreSQL. This reduces the number of API calls and improves performance.\n3. Recipe retrieval: The server directly retrieves specific details from the PostgreSQL database if they are still cached. If not, the server\n   seamlessly makes another API request to obtain the necessary details.\n","data":{"title":"Recipe website","items":["Typescript","Express","React","Postgres"],"imgSrc":"https://recipes.shmuel.dev/files/recipes.jpeg","githubLink":"https://github.com/shmuelTopo/recipe-app","liveLink":"https://recipes.shmuel.dev"},"isEmpty":false,"excerpt":"","html":"<p>I built recipe website using <strong>TypeScript</strong>, <strong>Express</strong>, and <strong>Postgres</strong>. It offers smooth recipe browsing experience. i.e. I know the way I used Postgres was overkill, but I had so much fun building it so I went with it...</p>\n<h3>Here are the website's key features:</h3>\n<ol>\n<li>Recipe search: Users can search for recipes by keyword. The server connects to an external recipe API to retrieve relevant recipes.</li>\n<li>Caching: Fetched recipes are temporarily stored in PostgreSQL. This reduces the number of API calls and improves performance.</li>\n<li>Recipe retrieval: The server directly retrieves specific details from the PostgreSQL database if they are still cached. If not, the server\nseamlessly makes another API request to obtain the necessary details.</li>\n</ol>\n"},{"content":"\nI developed Pen Label Generator, for a company in Lakewood, a software tool built using JavaScript, Svelte, and Tauri —a lighter alternative to Electron. designed to automate the time-consuming process of creating labels for pens stand.\n\n### Here are the software's key features:\n\n1. Label customization: Users can adjust the font size and customize the name of each pen label, according to their preferences.\n2. Cart management: The software allows users to conveniently add or remove pens from the cart, ensuring flexibility in label generation.\n3. Image selection: Users have the option to choose which images to display for each pen, providing visual customization.","data":{"title":"Pen Labels generator","items":["JavaScript","Svelte"],"imgSrc":"https://recipes.shmuel.dev/files/gmg-pens.jpeg","videoSrc":"https://recipes.shmuel.dev/files/pens-lable-generator.mp4","githubLink":"https://github.com/shmuelTopo/pens-lable-printing-tool"},"isEmpty":false,"excerpt":"","html":"<p>I developed Pen Label Generator, for a company in Lakewood, a software tool built using JavaScript, Svelte, and Tauri —a lighter alternative to Electron. designed to automate the time-consuming process of creating labels for pens stand.</p>\n<h3>Here are the software's key features:</h3>\n<ol>\n<li>Label customization: Users can adjust the font size and customize the name of each pen label, according to their preferences.</li>\n<li>Cart management: The software allows users to conveniently add or remove pens from the cart, ensuring flexibility in label generation.</li>\n<li>Image selection: Users have the option to choose which images to display for each pen, providing visual customization.</li>\n</ol>\n"},{"content":"I developed a web app that combines **Google Maps** with **Wikipedia** data. Users can search for a topic, view markers on a map for relevant locations, and click for detailed information.\n\n### Here are the website's key features:\n\n1. Integration: Wikimap combines Google Maps and Wikipedia, enabling users to search for topics and view markers on a map for relevant locations.\n2. Interactive location browsing: Users can click on a marker in Wikimap to open a Wikipedia link providing detailed information about the selected location.\n3. JavaScript and jQuery implementation: Wikimap utilizes JavaScript and jQuery to make Ajax calls to the Wikipedia API and Google Maps API, ensuring a smooth and interactive user experience.","data":{"title":"Wikimap App","items":["JavaScript","HTML","CSS"],"imgSrc":"https://recipes.shmuel.dev/files/wikimap.jpeg","githubLink":"https://github.com/shmuelTopo/recipe-app"},"isEmpty":false,"excerpt":"","html":"<p>I developed a web app that combines <strong>Google Maps</strong> with <strong>Wikipedia</strong> data. Users can search for a topic, view markers on a map for relevant locations, and click for detailed information.</p>\n<h3>Here are the website's key features:</h3>\n<ol>\n<li>Integration: Wikimap combines Google Maps and Wikipedia, enabling users to search for topics and view markers on a map for relevant locations.</li>\n<li>Interactive location browsing: Users can click on a marker in Wikimap to open a Wikipedia link providing detailed information about the selected location.</li>\n<li>JavaScript and jQuery implementation: Wikimap utilizes JavaScript and jQuery to make Ajax calls to the Wikipedia API and Google Maps API, ensuring a smooth and interactive user experience.</li>\n</ol>\n"}]